<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.foxconn.dao.UserDao">
    <!--  假设User实体类中各项属性的名字与数据库的不同，分别为 userName userAddress userSex userBirthday-->
    <resultMap id="userMap" type="com.foxconn.domain.User">
<!--        主键字段的对应-->
        <id property="userId" column="id"></id>
<!--        非主键字段的对应-->
        <result property="userName" column="username"></result>
        <result property="userAddress" column="address"></result>
        <result property="userSex" column="sex"></result>
        <result property="userBirthday" column="birthday"></result>
    </resultMap>
    <!-- 抽取重复的sql语句   -->
    <sql id="defaultUser">
        select *from user
    </sql>
    <!--配置查询所有 -->
    <select id="findAll" resultType="user">
        <include refid="defaultUser"></include>
    </select>
    <!-- 保存用户   -->
    <insert id="saveUser" parameterType="com.foxconn.domain.User">
        <!-- 配置插入操作后，获取插入数据的id-->
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username,address,sex,birthday) value (#{username},#{address},#{sex},#{birthday});
    </insert>
    <!-- 更新用户   -->
    <update id="updateUser" parameterType="com.foxconn.domain.User">
        update user set username=#{username},address=#{address},sex=#{sex},birthday=#{birthday} where id=#{id};
    </update>
    <!-- 删除用户   -->
    <delete id="deleteUser" parameterType="Integer">
        delete from user where id=#{id};
    </delete>
    <select id="findById" parameterType="Integer" resultType="com.foxconn.domain.User">
        select *from user where id=#{id};
    </select>
<!--    根据名称模糊查询-->
    <select id="findByName" parameterType="String" resultType="com.foxconn.domain.User">
        select * from user where username like #{user};
    </select>

<!--    查询用户数量-->
    <select id="findTotal" resultType="int">
        select count(id) from user;
    </select>
<!--    根据queryVo的条件查询用户-->
    <select id="findUserByVo" parameterType="com.foxconn.domain.QueryVo" resultType="com.foxconn.domain.User">
        select  * from user where username like #{user.username}
    </select>
    <!--    根据名称模糊查询-使用条件查询-->
    <select id="findUserByCondition" parameterType="user" resultType="user">
        select * from user where 1=1
        <if test="username != null">
           and username = #{username}
        </if>
    </select>
    <!-- 根据queryvo中的id集合实现查询用户列表   -->
    <select id="findUserInIds" resultType="user" parameterType="queryVo">
        select *from user
        <where>
            <if test="ids !=null and ids.size()>0">
                <foreach collection="ids" open="and id in(" close=")" item="uid" separator=",">
                    #{uid}
                </foreach>
            </if>
        </where>
    </select>
</mapper>